{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contact-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","items","createReducer","intialContacts","state","action","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","persistor","persistStore","Container","children","title","className","s","container","initialState","ContactForm","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","contactList","onSubmit","some","contact","toLowerCase","alert","reset","form__contact","this","label","htmlFor","input","onChange","type","pattern","required","button","Component","connect","dispatch","getCurrentContacts","normalizedFilter","trim","includes","allContacts","onContactDelete","list","map","item","wrap","onClick","getFilter","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2462b2b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__33Ibq\",\"title\":\"Filter_title__1qEnJ\",\"input\":\"Filter_input__2Qxyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2gr4G\",\"title\":\"Container_title__laWe_\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './contact-actions';\nimport intialContacts from 'data/contacts.json';\n\nconst items = createReducer(intialContacts, {\n  [addContact]: (state, action) => [action.payload, ...state],\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  // devTools: process.env.NODE_ENV === 'development',\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children, title }) => (\r\n  <div className={s.container}>\r\n    <h1 className={s.title}>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contact-actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { contactList, onSubmit } = this.props;\r\n\r\n    if (\r\n      contactList.some(\r\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    if (contactList.some(contact => number === contact.number)) {\r\n      alert(`${number} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n    // this.setState({ name: '', number: '' });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form__contact} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor=\"input name\">\r\n          <p className={s.title}>Name</p>\r\n          <input\r\n            className={s.input}\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label} htmlFor=\"input number\">\r\n          <p className={s.title}>Number</p>\r\n          <input\r\n            className={s.input}\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contactList: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contact-actions';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ allContacts, onContactDelete }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {allContacts.map(({ name, id, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <div className={s.wrap}>\r\n            <span className={s.name}>\r\n              {name} : {number}\r\n            </span>\r\n            <button\r\n              className={s.button}\r\n              onClick={() => onContactDelete(id)}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getCurrentContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  allContacts: getCurrentContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onContactDelete: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  allContacts: PropTypes.array.isRequired,\r\n  onContactDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contact-actions';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, getFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.title}>Find contact by name</p>\r\n      <input\r\n        className={s.input}\r\n        onChange={getFilter}\r\n        value={value}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getFilter: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  getFilter: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\n\n//styles\nimport './App.css';\n\n//components\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <Container title=\"Phonebook\">\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store, persistor } from 'redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__contact\":\"ContactForm_form__contact__1LiYm\",\"label\":\"ContactForm_label__3-rH2\",\"title\":\"ContactForm_title__3nLt4\",\"input\":\"ContactForm_input__1L7f2\",\"button\":\"ContactForm_button__1kpCE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1QlQQ\",\"item\":\"ContactList_item__2bTB-\",\"name\":\"ContactList_name__2sqhF\",\"wrap\":\"ContactList_wrap__3jiKP\",\"button\":\"ContactList_button__1b5R0\"};"],"sourceRoot":""}